
MainmenuWikipediaTheFreeEncyclopediaCreateaccount
LoginPersonaltoolsContents
(Top)
HistoryEditionsExecutionsystemSyntaxSpecialclassesCriticismClasslibrariesDocumentationImplementationsUseoutsidetheJavaplatformSeealso
References
Bibliography
ExternallinksJava(programminglanguage)Article
TalkRead
Viewsource
ViewhistoryToolsAppearance
TextSmall
Standard
LargeWidthStandard
Wide/home/amiri/Teaching/TA_2024_Summer/CS170/teaching/GitHub/Java/Step05RaggedArraysPagesemi-protected
FromWikipedia,thefreeencyclopedia
NottobeconfusedwithJava(softwareplatform),JavaScript,Java,orJavaneselanguage.
"Openframe"redirectshere.Fortheten-pinbowlingterm,seeOpenframe.
Java
ParadigmMulti-paradigm:generic,object-oriented(class-based),functional,imperative,reflective,concurrent
DesignedbyJamesGosling
DeveloperOracleCorporation
FirstappearedMay23,1995;29yearsago[1]
TypingdisciplineStatic,strong,safe,nominative,manifest
MemorymanagementAutomaticgarbagecollection
Filenameextensions.java,.class,.jar,.jmod
Websiteoracle.com/java/
java.com
dev.javaInfluencedby
CLU,[2]Simula67,[2]Lisp,[2]Smalltalk,[2]Ada83,C++,[3]C#,[4]Eiffel,[5]Mesa,[6]Modula-3,[7]Oberon,[8]Objective-C,[9]UCSDPascal,[10][11]ObjectPascal[12]
Influenced
Ada2005,BeanShell,C#,Chapel,[13]Clojure,ECMAScript,Fantom,Gambas,[14]Groovy,Hack,[15]Haxe,J#,Kotlin,PHP,Python,Scala,Seed7,Vala,JavaScript,JS++,ArkTSJavaProgrammingatWikibooksJavaisahigh-level,class-based,object-orientedprogramminglanguagethatisdesignedtohaveasfewimplementationdependenciesaspossible.Itisageneral-purposeprogramminglanguageintendedtoletprogrammerswriteonce,runanywhere(WORA),[16]meaningthatcompiledJavacodecanrunonallplatformsthatsupportJavawithouttheneedtorecompile.[17]JavaapplicationsaretypicallycompiledtobytecodethatcanrunonanyJavavirtualmachine(JVM)regardlessoftheunderlyingcomputerarchitecture.AlthoughitssyntaxissimilartothatofCandC++,theJavalanguagehasfewerlow-levelfacilitiesthaneitherofthem.TheJavaruntimeprovidesdynamiccapabilities(suchasreflectionandruntimecodemodification)thataretypicallynotavailableintraditionalcompiledlanguages.Javagainedpopularityshortlyafteritsrelease,andhasbeenaverypopularprogramminglanguagesincethen.[18]Javawasthethirdmostpopularprogramminglanguagein2022accordingtoGitHub.[19]Althoughstillwidelypopular,therehasbeenagradualdeclineinuseofJavainrecentyearswithotherlanguagesusingJVMgainingpopularity.[20]JavawasoriginallydevelopedbyJamesGoslingatSunMicrosystems.ItwasreleasedinMay1995asacorecomponentofSun'sJavaplatform.TheoriginalandreferenceimplementationJavacompilers,virtualmachines,andclasslibrarieswereoriginallyreleasedbySununderproprietarylicenses.AsofMay2007,incompliancewiththespecificationsoftheJavaCommunityProcess,SunhadrelicensedmostofitsJavatechnologiesundertheGPL-2.0-onlylicense.OracleoffersitsownHotSpotJavaVirtualMachine,howevertheofficialreferenceimplementationistheOpenJDKJVMwhichisfreeopen-sourcesoftwareandusedbymostdevelopersandisthedefaultJVMforalmostallLinuxdistributions.AsofMarch2024,Java22isthelatestversion.Java8,11,17,and21arepreviousLTSversionsstillofficiallysupported.
History
Seealso:Java(softwareplatform)§History
Duke,theJavamascot
JamesGosling,thecreatorofJava,in2008JamesGosling,MikeSheridan,andPatrickNaughtoninitiatedtheJavalanguageprojectinJune1991.[21]Javawasoriginallydesignedforinteractivetelevision,butitwastooadvancedforthedigitalcabletelevisionindustryatthetime.[22]ThelanguagewasinitiallycalledOakafteranoaktreethatstoodoutsideGosling'soffice.LatertheprojectwentbythenameGreenandwasfinallyrenamedJava,fromJavacoffee,atypeofcoffeefromIndonesia.[23]GoslingdesignedJavawithaC/C++-stylesyntaxthatsystemandapplicationprogrammerswouldfindfamiliar.[24]SunMicrosystemsreleasedthefirstpublicimplementationasJava1.0in1996.[25]Itpromisedwriteonce,runanywhere(WORA)functionality,providingno-costrun-timesonpopularplatforms.Fairlysecureandfeaturingconfigurablesecurity,itallowednetwork-andfile-accessrestrictions.MajorwebbrowserssoonincorporatedtheabilitytorunJavaappletswithinwebpages,andJavaquicklybecamepopular.TheJava1.0compilerwasre-writteninJavabyArthurvanHofftocomplystrictlywiththeJava1.0languagespecification.[26]WiththeadventofJava2(releasedinitiallyasJ2SE1.2inDecember1998–1999),newversionshadmultipleconfigurationsbuiltfordifferenttypesofplatforms.J2EEincludedtechnologiesandAPIsforenterpriseapplicationstypicallyruninserverenvironments,whileJ2MEfeaturedAPIsoptimizedformobileapplications.ThedesktopversionwasrenamedJ2SE.In2006,formarketingpurposes,SunrenamednewJ2versionsasJavaEE,JavaME,andJavaSE,respectively.In1997,SunMicrosystemsapproachedtheISO/IECJTC1standardsbodyandlatertheEcmaInternationaltoformalizeJava,butitsoonwithdrewfromtheprocess.[27][28][29]Javaremainsadefactostandard,controlledthroughtheJavaCommunityProcess.[30]Atonetime,SunmademostofitsJavaimplementationsavailablewithoutcharge,despitetheirproprietarysoftwarestatus.SungeneratedrevenuefromJavathroughthesellingoflicensesforspecializedproductssuchastheJavaEnterpriseSystem.OnNovember13,2006,SunreleasedmuchofitsJavavirtualmachine(JVM)asfreeandopen-sourcesoftware(FOSS),underthetermsoftheGPL-2.0-onlylicense.OnMay8,2007,Sunfinishedtheprocess,makingallofitsJVM'scorecodeavailableunderfreesoftware/open-sourcedistributionterms,asidefromasmallportionofcodetowhichSundidnotholdthecopyright.[31]Sun'svice-presidentRichGreensaidthatSun'sidealrolewithregardtoJavawasasanevangelist.[32]FollowingOracleCorporation'sacquisitionofSunMicrosystemsin2009–10,OraclehasdescribeditselfasthestewardofJavatechnologywitharelentlesscommitmenttofosteringacommunityofparticipationandtransparency.[33]ThisdidnotpreventOraclefromfilingalawsuitagainstGoogleshortlyafterthatforusingJavainsidetheAndroidSDK(seetheAndroidsection).OnApril2,2010,JamesGoslingresignedfromOracle.[34]InJanuary2016,OracleannouncedthatJavarun-timeenvironmentsbasedonJDK9willdiscontinuethebrowserplugin.[35]Javasoftwarerunsoneverythingfromlaptopstodatacenters,gameconsolestoscientificsupercomputers.[36]Oracle(andothers)highlyrecommenduninstallingoutdatedandunsupportedversionsofJava,duetounresolvedsecurityissuesinolderversions.[37]
PrinciplesTherewerefiveprimarygoalsinthecreationoftheJavalanguage:[17]Itmustbesimple,object-oriented,andfamiliar.
Itmustberobustandsecure.
Itmustbearchitecture-neutralandportable.
Itmustexecutewithhighperformance.
Itmustbeinterpreted,threaded,anddynamic.Versions
Mainarticle:JavaversionhistoryAsofSeptember2023,Java8,11,17and21aresupportedasLong-TermSupport(LTS)versions.[38]Oraclereleasedthelastzero-costpublicupdateforthelegacyversionJava8LTSinJanuary2019forcommercialuse,althoughitwillotherwisestillsupportJava8withpublicupdatesforpersonaluseindefinitely.OthervendorssuchasAdoptiumcontinuetoofferfreebuildsofOpenJDK'sLong-TermSupport(LTS)versions.Thesebuildsmayincludeadditionalsecuritypatchesandbugfixes.[39]MajorreleaseversionsofJava,alongwiththeirreleasedates:
VersionDate
JDKBeta1995
JDK1.0January23,1996[40]
JDK1.1February19,1997
J2SE1.2December8,1998
J2SE1.3May8,2000
J2SE1.4February6,2002
J2SE5.0September30,2004
JavaSE6December11,2006
JavaSE7July28,2011
JavaSE8(LTS)March18,2014
JavaSE9September21,2017
JavaSE10March20,2018
JavaSE11(LTS)September25,2018[41]
JavaSE12March19,2019
JavaSE13September17,2019
JavaSE14March17,2020
JavaSE15September15,2020[42]
JavaSE16March16,2021
JavaSE17(LTS)September14,2021
JavaSE18March22,2022
JavaSE19September20,2022
JavaSE20March21,2023
JavaSE21(LTS)September19,2023[43]
JavaSE22March19,2024
Editions
Seealso:FreeJavaimplementations§Classlibrary
JavaplatformeditionsJavaCard
JavaME(MicroEdition)
JavaSE(StandardEdition)
JakartaEE(EnterpriseEdition)
JavaFX(bundledinOracle'sJDKfromversions8to10butseparatelysince11)
PersonalJava(Discontinued)vteSunhasdefinedandsupportsfoureditionsofJavatargetingdifferentapplicationenvironmentsandsegmentedmanyofitsAPIssothattheybelongtooneoftheplatforms.Theplatformsare:JavaCardforsmart-cards.[44]
JavaPlatform,MicroEdition(JavaME)–targetingenvironmentswithlimitedresources.[45]
JavaPlatform,StandardEdition(JavaSE)–targetingworkstationenvironments.[46]
JavaPlatform,EnterpriseEdition(JavaEE)–targetinglargedistributedenterpriseorInternetenvironments.[47]TheclassesintheJavaAPIsareorganizedintoseparategroupscalledpackages.Eachpackagecontainsasetofrelatedinterfaces,classes,subpackagesandexceptions.SunalsoprovidedaneditioncalledPersonalJavathathasbeensupersededbylater,standards-basedJavaMEconfiguration-profilepairings.
Executionsystem
JavaJVMandbytecode
Mainarticles:Java(softwareplatform)andJavavirtualmachineOnedesigngoalofJavaisportability,whichmeansthatprogramswrittenfortheJavaplatformmustrunsimilarlyonanycombinationofhardwareandoperatingsystemwithadequateruntimesupport.ThisisachievedbycompilingtheJavalanguagecodetoanintermediaterepresentationcalledJavabytecode,insteadofdirectlytoarchitecture-specificmachinecode.Javabytecodeinstructionsareanalogoustomachinecode,buttheyareintendedtobeexecutedbyavirtualmachine(VM)writtenspecificallyforthehosthardware.End-userscommonlyuseaJavaRuntimeEnvironment(JRE)installedontheirdeviceforstandaloneJavaapplicationsorawebbrowserforJavaapplets.Standardlibrariesprovideagenericwaytoaccesshost-specificfeaturessuchasgraphics,threading,andnetworking.Theuseofuniversalbytecodemakesportingsimple.However,theoverheadofinterpretingbytecodeintomachineinstructionsmadeinterpretedprogramsalmostalwaysrunmoreslowlythannativeexecutables.Just-in-time(JIT)compilersthatcompilebyte-codestomachinecodeduringruntimewereintroducedfromanearlystage.Java'sHotspotcompilerisactuallytwocompilersinone;andwithGraalVM(includedine.g.Java11,butremovedasofJava16)allowingtieredcompilation.[48]Javaitselfisplatform-independentandisadaptedtotheparticularplatformitistorunonbyaJavavirtualmachine(JVM),whichtranslatestheJavabytecodeintotheplatform'smachinelanguage.[49]
Performance
Mainarticle:JavaperformanceProgramswritteninJavahaveareputationforbeingslowerandrequiringmorememorythanthosewritteninC++.[50][51]However,Javaprograms'executionspeedimprovedsignificantlywiththeintroductionofjust-in-timecompilationin1997/1998forJava1.1,[52]theadditionoflanguagefeaturessupportingbettercodeanalysis(suchasinnerclasses,theStringBuilderclass,optionalassertions,etc.),andoptimizationsintheJavavirtualmachine,suchasHotSpotbecomingSun'sdefaultJVMin2000.WithJava1.5,theperformancewasimprovedwiththeadditionofthejava.util.concurrentpackage,includinglock-freeimplementationsoftheConcurrentMapsandothermulti-corecollections,anditwasimprovedfurtherwithJava1.6.
Non-JVMSomeplatformsofferdirecthardwaresupportforJava;therearemicrocontrollersthatcanrunJavabytecodeinhardwareinsteadofasoftwareJavavirtualmachine,[53]andsomeARM-basedprocessorscouldhavehardwaresupportforexecutingJavabytecodethroughtheirJazelleoption,thoughsupporthasmostlybeendroppedincurrentimplementationsofARM.
AutomaticmemorymanagementJavausesanautomaticgarbagecollectortomanagememoryintheobjectlifecycle.Theprogrammerdetermineswhenobjectsarecreated,andtheJavaruntimeisresponsibleforrecoveringthememoryonceobjectsarenolongerinuse.Oncenoreferencestoanobjectremain,theunreachablememorybecomeseligibletobefreedautomaticallybythegarbagecollector.Somethingsimilartoamemoryleakmaystilloccurifaprogrammer'scodeholdsareferencetoanobjectthatisnolongerneeded,typicallywhenobjectsthatarenolongerneededarestoredincontainersthatarestillinuse.[54]Ifmethodsforanon-existentobjectarecalled,anullpointerexceptionisthrown.[55][56]OneoftheideasbehindJava'sautomaticmemorymanagementmodelisthatprogrammerscanbesparedtheburdenofhavingtoperformmanualmemorymanagement.Insomelanguages,memoryforthecreationofobjectsisimplicitlyallocatedonthestackorexplicitlyallocatedanddeallocatedfromtheheap.Inthelattercase,theresponsibilityofmanagingmemoryresideswiththeprogrammer.Iftheprogramdoesnotdeallocateanobject,amemoryleakoccurs.[54]Iftheprogramattemptstoaccessordeallocatememorythathasalreadybeendeallocated,theresultisundefinedanddifficulttopredict,andtheprogramislikelytobecomeunstableorcrash.Thiscanbepartiallyremediedbytheuseofsmartpointers,buttheseaddoverheadandcomplexity.Garbagecollectiondoesnotpreventlogicalmemoryleaks,i.e.thosewherethememoryisstillreferencedbutneverused.[54]GarbagecollectioninJavacanoccuratanymoment,thoughitideallyrunswhentheprogramisidle.However,iftheheaplackssufficientfreememoryforanewobject,garbagecollectionisguaranteedtotrigger,whichmaycausetheprogramtopausebriefly.It'simportanttonotethatJavadoesnotallowforexplicitmemorymanagementbytheprogrammer.JavadoesnotsupportC/C++stylepointerarithmetic,whereobjectaddressescanbearithmeticallymanipulated(e.g.byaddingorsubtractinganoffset).Thisallowsthegarbagecollectortorelocatereferencedobjectsandensurestypesafetyandsecurity.AsinC++andsomeotherobject-orientedlanguages,variablesofJava'sprimitivedatatypesareeitherstoreddirectlyinfields(forobjects)oronthestack(formethods)ratherthanontheheap,asiscommonlytruefornon-primitivedatatypes(butseeescapeanalysis).ThiswasaconsciousdecisionbyJava'sdesignersforperformancereasons.Javacontainsmultipletypesofgarbagecollectors.SinceJava9,HotSpotusestheGarbageFirstGarbageCollector(G1GC)asthedefault.[57]However,therearealsoseveralothergarbagecollectorsthatcanbeusedtomanagetheheap.FormostapplicationsinJava,G1GCissufficient.Previously,theParallelGarbageCollectorwasusedinJava8.Havingsolvedthememorymanagementproblemdoesnotrelievetheprogrammeroftheburdenofhandlingproperlyotherkindsofresources,likenetworkordatabaseconnections,filehandles,etc.,especiallyinthepresenceofexceptions.
Syntax
Mainarticle:Javasyntax
ThisdependencygraphoftheJavaCoreclasseswascreatedwithjdepsandGephi.ThesyntaxofJavaislargelyinfluencedbyC++andC.UnlikeC++,whichcombinesthesyntaxforstructured,generic,andobject-orientedprogramming,Javawasbuiltalmostexclusivelyasanobject-orientedlanguage.[17]Allcodeiswritteninsideclasses,andeverydataitemisanobject,withtheexceptionoftheprimitivedatatypes,(i.e.integers,floating-pointnumbers,booleanvalues,andcharacters),whicharenotobjectsforperformancereasons.JavareusessomepopularaspectsofC++(suchastheprintfmethod).UnlikeC++,Javadoesnotsupportoperatoroverloading[58]ormultipleinheritanceforclasses,thoughmultipleinheritanceissupportedforinterfaces.[59]JavausescommentssimilartothoseofC++.Therearethreedifferentstylesofcomments:asinglelinestylemarkedwithtwoslashes(//),amultiplelinestyleopenedwith/*andclosedwith*/,andtheJavadoccommentingstyleopenedwith/**andclosedwith*/.TheJavadocstyleofcommentingallowstheusertoruntheJavadocexecutabletocreatedocumentationfortheprogramandcanbereadbysomeintegrateddevelopmentenvironments(IDEs)suchasEclipsetoallowdeveloperstoaccessdocumentationwithintheIDE.
SpecialclassesThissectionneedsadditionalcitationsforverification.Pleasehelpimprovethisarticlebyaddingcitationstoreliablesourcesinthissection.Unsourcedmaterialmaybechallengedandremoved.
Findsources:"Java"programminglanguage–news·newspapers·books·scholar·JSTOR(May2019)(Learnhowandwhentoremovethismessage)
Applet
Mainarticle:JavaappletJavaappletsareprogramsembeddedinotherapplications,typicallyinaWebpagedisplayedinawebbrowser.TheJavaappletAPIisnowdeprecatedsinceJava9in2017.[60][61]
Servlet
Mainarticle:JavaservletJavaservlettechnologyprovidesWebdeveloperswithasimple,consistentmechanismforextendingthefunctionalityofaWebserverandforaccessingexistingbusinesssystems.Servletsareserver-sideJavaEEcomponentsthatgenerateresponsestorequestsfromclients.Mostofthetime,thismeansgeneratingHTMLpagesinresponsetoHTTPrequests,althoughthereareanumberofotherstandardservletclassesavailable,forexampleforWebSocketcommunication.TheJavaservletAPIhastosomeextentbeensuperseded(butstillusedunderthehood)bytwostandardJavatechnologiesforwebservices:theJavaAPIforRESTfulWebServices(JAX-RS2.0)usefulforAJAX,JSONandRESTservices,and
theJavaAPIforXMLWebServices(JAX-WS)usefulforSOAPWebServices.TypicalimplementationsoftheseAPIsonApplicationServersorServletContainersuseastandardservletforhandlingallinteractionswiththeHTTPrequestsandresponsesthatdelegatetothewebservicemethodsfortheactualbusinesslogic.
JavaServerPages
Mainarticle:JavaServerPagesJavaServerPages(JSP)areserver-sideJavaEEcomponentsthatgenerateresponses,typicallyHTMLpages,toHTTPrequestsfromclients.JSPsembedJavacodeinanHTMLpagebyusingthespecialdelimiters<%and%>.AJSPiscompiledtoaJavaservlet,aJavaapplicationinitsownright,thefirsttimeitisaccessed.Afterthat,thegeneratedservletcreatestheresponse.[62]
Swingapplication
Mainarticle:Swing(Java)SwingisagraphicaluserinterfacelibraryfortheJavaSEplatform.ItispossibletospecifyadifferentlookandfeelthroughthepluggablelookandfeelsystemofSwing.ClonesofWindows,GTK+,andMotifaresuppliedbySun.ApplealsoprovidesanAqualookandfeelformacOS.Wherepriorimplementationsoftheselooksandfeelsmayhavebeenconsideredlacking,SwinginJavaSE6addressesthisproblembyusingmorenativeGUIwidgetdrawingroutinesoftheunderlyingplatforms.[63]
JavaFXapplication
Mainarticle:JavaFXJavaFXisasoftwareplatformforcreatinganddeliveringdesktopapplications,aswellasrichwebapplicationsthatcanrunacrossawidevarietyofdevices.JavaFXisintendedtoreplaceSwingasthestandardGUIlibraryforJavaSE,butsinceJDK11JavaFXhasnotbeeninthecoreJDKandinsteadinaseparatemodule.[64]JavaFXhassupportfordesktopcomputersandwebbrowsersonMicrosoftWindows,Linux,andmacOS.JavaFXdoesnothavesupportfornativeOSlookandfeels.[65]
Generics
Mainarticle:GenericsinJavaIn2004,genericswereaddedtotheJavalanguage,aspartofJ2SE5.0.Priortotheintroductionofgenerics,eachvariabledeclarationhadtobeofaspecifictype.Forcontainerclasses,forexample,thisisaproblembecausethereisnoeasywaytocreateacontainerthatacceptsonlyspecifictypesofobjects.Eitherthecontaineroperatesonallsubtypesofaclassorinterface,usuallyObject,oradifferentcontainerclasshastobecreatedforeachcontainedclass.Genericsallowcompile-timetypecheckingwithouthavingtocreatemanycontainerclasses,eachcontainingalmostidenticalcode.Inadditiontoenablingmoreefficientcode,certainruntimeexceptionsarepreventedfromoccurring,byissuingcompile-timeerrors.IfJavapreventedallruntimetypeerrors(ClassCastExceptions)fromoccurring,itwouldbetypesafe.In2016,thetypesystemofJavawasprovenunsoundinthatitispossibletousegenericstoconstructclassesandmethodsthatallowassignmentofaninstanceoneclasstoavariableofanotherunrelatedclass.Suchcodeisacceptedbythecompiler,butfailsatruntimewithaclasscastexception.[66]
Criticism
Mainarticle:CriticismofJavaCriticismsdirectedatJavaincludetheimplementationofgenerics,[67]speed,[50]thehandlingofunsignednumbers,[68]theimplementationoffloating-pointarithmetic,[69]andahistoryofsecurityvulnerabilitiesintheprimaryJavaVMimplementationHotSpot.[70]
Classlibraries
Mainarticle:JavaClassLibraryTheJavaClassLibraryisthestandardlibrary,developedtosupportapplicationdevelopmentinJava.ItiscontrolledbyOracleincooperationwithothersthroughtheJavaCommunityProcessprogram.[71]CompaniesorindividualsparticipatinginthisprocesscaninfluencethedesignanddevelopmentoftheAPIs.Thisprocesshasbeenasubjectofcontroversyduringthe2010s.[72]Theclasslibrarycontainsfeaturessuchas:Thecorelibraries,whichinclude:
IO[73]/NIO
Networking(NOTE:newHTTPClientsinceJava11)
Reflection
Concurrency[73]
Generics
Scripting/Compiler
Functionalprogramming(Lambda,Streaming)
Collectionlibrariesthatimplementdatastructuressuchaslists,dictionaries,trees,sets,queuesanddouble-endedqueue,orstacks[74]
XMLProcessing(Parsing,Transforming,Validating)libraries
Security[75]
Internationalizationandlocalizationlibraries[76]
Theintegrationlibraries,whichallowtheapplicationwritertocommunicatewithexternalsystems.Theselibrariesinclude:
TheJavaDatabaseConnectivity(JDBC)APIfordatabaseaccess
JavaNamingandDirectoryInterface(JNDI)forlookupanddiscovery
Javaremotemethodinvocation(RMI)andCommonObjectRequestBrokerArchitecture(CORBA)fordistributedapplicationdevelopment
JavaManagementExtensions(JMX)formanagingandmonitoringapplications
Userinterfacelibraries,whichinclude:
The(heavyweight,ornative)AbstractWindowToolkit(AWT),whichprovidesGUIcomponents,themeansforlayingoutthosecomponentsandthemeansforhandlingeventsfromthosecomponents
The(lightweight)Swinglibraries,whicharebuiltonAWTbutprovide(non-native)implementationsoftheAWTwidgetry
APIsforaudiocapture,processing,andplayback
JavaFX
AplatformdependentimplementationoftheJavavirtualmachinethatisthemeansbywhichthebytecodesoftheJavalibrariesandthird-partyapplicationsareexecuted
Plugins,whichenableappletstoberuninwebbrowsers
JavaWebStart,whichallowsJavaapplicationstobeefficientlydistributedtoendusersacrosstheInternet
LicensinganddocumentationDocumentation
Mainarticle:JavadocJavadocisacomprehensivedocumentationsystem,createdbySunMicrosystems.Itprovidesdeveloperswithanorganizedsystemfordocumentingtheircode.Javadoccommentshaveanextraasteriskatthebeginning,i.e.thedelimitersare/**and*/,whereasthenormalmulti-linecommentsinJavaaredelimitedby/*and*/,andsingle-linecommentsstartwith//.[77]
Implementations
Seealso:FreeJavaimplementationsandListofJavacompilersThissectionneedsadditionalcitationsforverification.Pleasehelpimprovethisarticlebyaddingcitationstoreliablesourcesinthissection.Unsourcedmaterialmaybechallengedandremoved.
Findsources:"Java"programminglanguage–news·newspapers·books·scholar·JSTOR(September2023)(Learnhowandwhentoremovethismessage)
TheOracleimplementationispackagedintotwodifferentdistributions:TheJavaRuntimeEnvironment(JRE)whichcontainsthepartsoftheJavaSEplatformrequiredtorunJavaprogramsandisintendedforendusers,andtheJavaDevelopmentKit(JDK),whichisintendedforsoftwaredevelopersandincludesdevelopmenttoolssuchastheJavacompiler,Javadoc,Jar,andadebugger.OraclehasalsoreleasedGraalVM,ahighperformanceJavadynamiccompilerandinterpreter.therJavaSEimplementationthatislicensedundertheGNUGPL.TheimplementationstartedwhenSunbeganreleasingtheJavasourcecodeundertheGPL.AsofJavaSE7,OpenJDKistheofficialJavareferenceimplementation.ThegoalofJavaistomakeallimplementationsofJavacompatible.Historically,Sun'strademarklicenseforusageoftheJavabrandinsiststhatallimplementationsbecompatible.ThisresultedinalegaldisputewithMicrosoftafterSunclaimedthattheMicrosoftimplementationdidnotsupportJavaremotemethodinvocation(RMI)orJavaNativeInterface(JNI)andhadaddedplatform-specificfeaturesoftheirown.Sunsuedin1997,and,in2001,wonasettlementofUS$20million,aswellasacourtorderenforcingthetermsofthelicensefromSun.[78]Asaresult,MicrosoftnolongershipsJavawithWindows.Platform-independentJavaisessentialtoJavaEE,andanevenmorerigorousvalidationisrequiredtocertifyanimplementation.Thisenvironmentenablesportableserver-sideapplications.
UseoutsidetheJavaplatformTheJavaprogramminglanguagerequiresthepresenceofasoftwareplatforminorderforcompiledprogramstobeexecuted.OraclesuppliestheJavaplatformforusewithJava.TheAndroidSDKisanalternativesoftwareplatform,usedprimarilyfordevelopingAndroidapplicationswithitsownGUIsystem.
AndroidTheJavalanguageisakeypillarinAndroid,anopensourcemobileoperatingsystem.AlthoughAndroid,builtontheLinuxkernel,iswrittenlargelyinC,theAndroidSDKusestheJavalanguageasthebasisforAndroidapplicationsbutdoesnotuseanyofitsstandardGUI,SE,MEorotherestablishedJavastandards.[79]ThebytecodelanguagesupportedbytheAndroidSDKisincompatiblewithJavabytecodeandrunsonitsownvirtualmachine,optimizedforlow-memorydevicessuchassmartphonesandtabletcomputers.DependingontheAndroidversion,thebytecodeiseitherinterpretedbytheDalvikvirtualmachineorcompiledintonativecodebytheAndroidRuntime.AndroiddoesnotprovidethefullJavaSEstandardlibrary,althoughtheAndroidSDKdoesincludeanindependentimplementationofalargesubsetofit.ItsupportsJava6andsomeJava7features,offeringanimplementationcompatiblewiththestandardlibrary(ApacheHarmony).
Controversy
Seealso:OracleAmerica,Inc.v.Google,Inc.TheuseofJava-relatedtechnologyinAndroidledtoalegaldisputebetweenOracleandGoogle.OnMay7,2012,aSanFranciscojuryfoundthatifAPIscouldbecopyrighted,thenGooglehadinfringedOracle'scopyrightsbytheuseofJavainAndroiddevices.[80]DistrictJudgeWilliamAlsupruledonMay31,2012,thatAPIscannotbecopyrighted,[81]butthiswasreversedbytheUnitedStatesCourtofAppealsfortheFederalCircuitinMay2014.[82]OnMay26,2016,thedistrictcourtdecidedinfavorofGoogle,rulingthecopyrightinfringementoftheJavaAPIinAndroidconstitutesfairuse.[83]InMarch2018,thisrulingwasoverturnedbytheAppealsCourt,whichsentdownthecaseofdeterminingthedamagestofederalcourtinSanFrancisco.[84]GooglefiledapetitionforwritofcertiorariwiththeSupremeCourtoftheUnitedStatesinJanuary2019tochallengethetworulingsthatweremadebytheAppealsCourtinOracle'sfavor.[85]OnApril5,2021,theCourtruled6–2inGoogle'sfavor,thatitsuseofJavaAPIsshouldbeconsideredfairuse.However,thecourtrefusedtoruleonthecopyrightabilityofAPIs,choosinginsteadtodeterminetheirrulingbyconsideringJava'sAPIcopyrightable"purelyforargument'ssake."[86]
SeealsoiconComputerprogrammingportalC#
C++
Dalvik,usedinoldAndroidversions,replacedbynon-JITAndroidRuntime
JavaHeterogeneousDistributedComputing
ListofJavaAPIs
ListofJavaframeworks
ListofJVMlanguages
ListofJavavirtualmachines
ComparisonofC#andJava
ComparisonofJavaandC++
ComparisonofprogramminglanguagesReferencesBinstock,Andrew(May20,2015)."Java's20YearsofInnovation".Forbes.ArchivedfromtheoriginalonMarch14,2016.RetrievedMarch18,2016.
BarbaraLiskovwithJohnGuttag(2000).ProgramDevelopmentinJava-Abstraction,Specification,andObject-OrientedDesign.USA,AddisonWesley.ISBN9780201657685.
Chaudhary,HarryH.(July28,2014)."CrackingTheJavaProgrammingInterview::2000+JavaInterviewQue/Ans".ArchivedfromtheoriginalonSeptember29,2023.RetrievedMay29,2016.
Java5.0addedseveralnewlanguagefeatures(theenhancedforloop,autoboxing,varargsandannotations),aftertheywereintroducedinthesimilar(andcompeting)C#language.[1]ArchivedMarch19,2011,attheWaybackMachine[2]ArchivedJanuary7,2006,attheWaybackMachine
Gosling,James;McGilton,Henry(May1996)."TheJavaLanguageEnvironment".ArchivedfromtheoriginalonMay6,2014.RetrievedMay6,2014.
Gosling,James;Joy,Bill;Steele,Guy;Bracha,Gilad."TheJavaLanguageSpecification,2ndEdition".ArchivedfromtheoriginalonAugust5,2011.RetrievedFebruary8,2008.
"TheA-ZofProgrammingLanguages:Modula-3".Computerworld.ArchivedfromtheoriginalonJanuary5,2009.RetrievedJune9,2010.
NiklausWirthstatedonanumberofpublicoccasions,e.g.inalectureatthePolytechnicMuseum,MoscowinSeptember2005(severalindependentfirst-handaccountsinRussianexist,e.g.onewithanaudiorecording:Filippova,Elena(September22,2005)."NiklausWirth'slectureatthePolytechnicMuseuminMoscow".ArchivedfromtheoriginalonDecember1,2020.RetrievedNovember20,2011.),thattheSunJavadesignteamlicensedtheOberoncompilersourcesanumberofyearspriortothereleaseofJavaandexaminedit:a(relative)compactness,typesafety,garbagecollection,nomultipleinheritanceforclasses–allthesekeyoveralldesignfeaturesaresharedbyJavaandOberon.
PatrickNaughtoncitesObjective-CasastronginfluenceonthedesignoftheJavaprogramminglanguage,statingthatnotabledirectderivativesincludeJavainterfaces(derivedfromObjective-C'sprotocol)andprimitivewrapperclasses.[3]ArchivedJuly13,2011,attheWaybackMachine
TechMetrixResearch(1999)."HistoryofJava"(PDF).JavaApplicationServersReport.Archivedfromtheoriginal(PDF)onDecember29,2010."TheprojectwentaheadunderthenamegreenandthelanguagewasbasedonanoldmodelofUCSDPascal,whichmakesitpossibletogenerateinterpretivecode."
"AConversationwithJamesGosling–ACMQueue".Queue.acm.org.August31,2004.ArchivedfromtheoriginalonJuly16,2015.RetrievedJune9,2010.
TheJavaLanguageTeam.AboutMicrosoft's"Delegates"(WhitePaper).JavaSoft,SunMicrosystems,Inc.ArchivedfromtheoriginalonJune27,2012."Inthesummerof1996,SunwasdesigningtheprecursortowhatisnowtheeventmodeloftheAWTandtheJavaBeanscomponentarchitecture.Borlandcontributedgreatlytothisprocess.WelookedverycarefullyatDelphiObjectPascalandbuiltaworkingprototypeofboundmethodreferencesinordertounderstandtheirinteractionwiththeJavaprogramminglanguageanditsAPIs."
"Chapelspec(Acknowledgements)"(PDF).CrayInc.October1,2015.Archived(PDF)fromtheoriginalonFebruary5,2016.RetrievedJanuary14,2016.
"GambasDocumentationIntroduction".GambasWebsite.ArchivedfromtheoriginalonOctober9,2017.RetrievedOctober9,2017.
"FacebookQ&A:HackbringsstatictypingtoPHPworld".InfoWorld.March26,2014.ArchivedfromtheoriginalonFebruary13,2015.RetrievedJanuary11,2015.
"Writeonce,runanywhere?".ComputerWeekly.May2,2002.ArchivedfromtheoriginalonAugust13,2021.RetrievedJuly27,2009.
"1.2DesignGoalsoftheJavaProgrammingLanguage".Oracle.January1,1999.ArchivedfromtheoriginalonJanuary23,2013.RetrievedJanuary14,2013.
Melanson,Mike(August9,2022)."Don'tcallitacomeback:WhyJavaisstillchamp".GitHub.ArchivedfromtheoriginalonAugust25,2023.RetrievedOctober15,2023.
"Thetopprogramminglanguages".TheStateoftheOctoverse.GitHub.ArchivedfromtheoriginalonAugust2,2023.RetrievedOctober15,2023.
McMillan,Robert(August1,2013)."IsJavaLosingItsMojo?".Wired.ArchivedfromtheoriginalonFebruary15,2017.RetrievedOctober15,2023.
Byous,Jon(c.1998)."Javatechnology:Theearlyyears".SunDeveloperNetwork.SunMicrosystems.ArchivedfromtheoriginalonApril20,2005.RetrievedApril22,2005.
Object-orientedprogramming"TheHistoryofJavaTechnology".SunDeveloperNetwork.c.1995.ArchivedfromtheoriginalonFebruary10,2010.RetrievedApril30,2010.
Murphy,Kieron(October4,1996)."SowhydidtheydecidetocallitJava?".JavaWorld.ArchivedfromtheoriginalonJuly13,2020.RetrievedJuly13,2020.
Kabutz,Heinz;OnceUponanOakArchivedApril13,2007,attheWaybackMachine.Artima.RetrievedApril29,2007.
"JAVASOFTSHIPSJAVA1.0".ArchivedfromtheoriginalonMarch10,2007.RetrievedMay13,2018.
Object-orientedProgrammingwithJava:EssentialsandApplications.TataMcGraw-HillEducation.p.34.
"JSG–JavaStudyGroup".open-std.org.ArchivedfromtheoriginalonAugust25,2006.RetrievedAugust2,2006.
"WhyJavaWas–Not–StandardizedTwice"(PDF).Archived(PDF)fromtheoriginalonJanuary13,2014.RetrievedJune3,2018.
"WhatisECMA—andwhyMicrosoftcares".ZDNet.ArchivedfromtheoriginalonMay6,2014.RetrievedMay6,2014.
"JavaCommunityProcesswebsite".Jcp.org.May24,2010.ArchivedfromtheoriginalonAugust8,2006.RetrievedJune9,2010.
"JAVAONE:Sun–ThebulkofJavaisopensourced".GrnLight.net.ArchivedfromtheoriginalonMay27,2014.RetrievedMay26,2014.
"Sun'sEvolvingRoleasJavaEvangelist".O'ReillyMedia.ArchivedfromtheoriginalonSeptember15,2010.RetrievedAugust2,2009.
"OracleandJava".oracle.com.OracleCorporation.ArchivedfromtheoriginalonJanuary31,2010.RetrievedAugust23,2010."OraclehasbeenaleadingandsubstantivesupporterofJavasinceitsemergencein1995andtakesonthenewroleasstewardofJavatechnologywitharelentlesscommitmenttofosteringacommunityofparticipationandtransparency."
Gosling,James(April9,2010)."Timetomoveon..."OnaNewRoad.ArchivedfromtheoriginalonNovember5,2010.RetrievedNovember16,2011.
Topic,Dalibor."MovingtoaPlugin-FreeWeb".ArchivedfromtheoriginalonMarch16,2016.RetrievedMarch15,2016.
"LearnAboutJavaTechnology".Oracle.ArchivedfromtheoriginalonNovember24,2011.RetrievedNovember21,2011.
"WhyshouldIuninstallolderversionsofJavafrommysystem?".Oracle.ArchivedfromtheoriginalonFebruary12,2018.RetrievedSeptember24,2021.
"OracleJavaSESupportRoadmap".Oracle.September13,2021.ArchivedfromtheoriginalonSeptember19,2021.RetrievedSeptember18,2021.
"Temurin™Support;Adoptium".adoptium.net.ArchivedfromtheoriginalonMarch29,2024.RetrievedMarch29,2024.
"JAVASOFTSHIPSJAVA1.0".sun.com.ArchivedfromtheoriginalonMarch10,2007.RetrievedFebruary5,2008.
Chander,Sharat."IntroducingJavaSE11".oracle.com.ArchivedfromtheoriginalonSeptember26,2018.RetrievedSeptember26,2018.
"TheArrivalofJava15!".Oracle.September15,2020.ArchivedfromtheoriginalonSeptember16,2020.RetrievedSeptember15,2020.
"JDK21".openjdk.org.ArchivedfromtheoriginalonSeptember20,2023.RetrievedSeptember20,2023.
"JavaCardOverview".OracleTechnologyNetwork.Oracle.ArchivedfromtheoriginalonJanuary7,2015.RetrievedDecember18,2014.
"JavaPlatform,MicroEdition(JavaME)".OracleTechnologyNetwork.Oracle.ArchivedfromtheoriginalonJanuary4,2015.RetrievedDecember18,2014.
"JavaSE".OracleTechnologyNetwork.Oracle.ArchivedfromtheoriginalonDecember24,2014.RetrievedDecember18,2014.
"JavaPlatform,EnterpriseEdition(JavaEE)".OracleTechnologyNetwork.Oracle.ArchivedfromtheoriginalonDecember17,2014.RetrievedDecember18,2014.
"DeepDiveIntotheNewJavaJITCompiler-Graal|Baeldung".www.baeldung.com.August6,2021.ArchivedfromtheoriginalonOctober28,2021.RetrievedOctober13,2021.
"IstheJVM(JavaVirtualMachine)platformdependentorplatformindependent?WhatistheadvantageofusingtheJVM,andhavingJavabeatranslatedlanguage?".ProgrammerInterview.ArchivedfromtheoriginalonJanuary19,2015.RetrievedJanuary19,2015.
Jelovic,Dejan."WhyJavawillalwaysbeslowerthanC++".ArchivedfromtheoriginalonFebruary11,2008.RetrievedFebruary15,2008.
Hundt,Robert."LoopRecognitioninC++/Java/Go/Scala"(PDF).Archived(PDF)fromtheoriginalonNovember16,2011.RetrievedJuly12,2012.
"Symantec'sJust-In-TimeJavaCompilerToBeIntegratedintoSunJDK1.1".ArchivedfromtheoriginalonJune28,2010.RetrievedAugust1,2009.
Salcic,Zoran;Park,Heejong;Teich,Jürgen;Malik,Avinash;Nadeem,Muhammad(July22,2017)."Noc-HMP:AHeterogeneousMulticoreProcessorforEmbeddedSystemsDesignedinSystemJ".ACMTransactionsonDesignAutomationofElectronicSystems.22(4):73.doi:10.1145/3073416.ISSN1084-4309.S2CID11150290.
Bloch2018,p.26-28,§Item7:Eliminateobsoleteobjectreferences.
"NullPointerException".Oracle.ArchivedfromtheoriginalonMay6,2014.RetrievedMay6,2014.
"ExceptionsinJava".Artima.com.ArchivedfromtheoriginalonJanuary21,2009.RetrievedAugust10,2010.
"JavaHotSpot™VirtualMachinePerformanceEnhancements".Oracle.com.ArchivedfromtheoriginalonMay29,2017.RetrievedApril26,2017.
"OperatorOverloading(C#vsJava)".C#forJavaDevelopers.Microsoft.ArchivedfromtheoriginalonJanuary7,2015.RetrievedDecember10,2014.
"MultipleInheritanceofState,Implementation,andType".TheJavaTutorials.Oracle.ArchivedfromtheoriginalonNovember9,2014.RetrievedDecember10,2014.
"DeprecatedAPIs,Features,andOptions".Oracle.ArchivedfromtheoriginalonJune19,2019.RetrievedMay31,2019.
"Applet(JavaPlatformSE7)".Docs.Oracle.ArchivedfromtheoriginalonAugust2,2020.RetrievedMay1,2020.
"WhatIsaJSPPage?-TheJavaEE5Tutorial".docs.oracle.com.ArchivedfromtheoriginalonAugust2,2020.RetrievedMay1,2020.
"Trail:CreatingaGUIWithJFC/Swing(TheJavaTutorials)".docs.oracle.com.ArchivedfromtheoriginalonApril29,2020.RetrievedMay1,2020.
"RemovedfromJDK11,JavaFX11arrivesasastandalonemodule".InfoWorld.September20,2018.ArchivedfromtheoriginalonOctober14,2020.RetrievedOctober13,2020.
"GettingStartedwithJavaFX:HelloWorld,JavaFXStyle".JavaFX2TutorialsandDocumentation.Oracle.ArchivedfromtheoriginalonAugust2,2020.RetrievedMay1,2020.
"JavaandScala'sTypeSystemsareUnsound"(PDF).Archived(PDF)fromtheoriginalonNovember28,2016.RetrievedFebruary20,2017.
Arnold,Ken(June27,2005)."GenericsConsideredHarmful".java.net.ArchivedfromtheoriginalonOctober10,2007.RetrievedSeptember10,2015.
Owens,SeanR."Javaandunsignedint,unsignedshort,unsignedbyte,unsignedlong,etc.(Orrather,thelackthereof)".ArchivedfromtheoriginalonFebruary20,2009.RetrievedJuly4,2011.
Kahan,William(March1,1998)."HowJava'sFloating-PointHurtsEveryoneEverywhere-ACM1998WorkshoponJava(Stanford)"(PDF).ElectricalEngineering&ComputerScience,UniversityofCaliforniaatBerkeley.Archived(PDF)fromtheoriginalonSeptember5,2012.RetrievedJune4,2011.
"HaveyoucheckedtheJava?".ArchivedfromtheoriginalonSeptember21,2012.RetrievedDecember23,2011.
Cadenhead,Rogers(November20,2017),UnderstandingHowJavaProgramsWork,archivedfromtheoriginalonAugust13,2021,retrievedMarch26,2019
Woolf,Nicky(May26,2016)."Googlewinssix-yearlegalbattlewithOracleoverAndroidcodecopyright".TheGuardian.ISSN0261-3077.ArchivedfromtheoriginalonMarch26,2019.RetrievedMarch26,2019.
Bloch2018,pp.1–4,§1Introduction.
"CollectionsFrameworkOverview".JavaDocumentation.Oracle.ArchivedfromtheoriginalonDecember31,2014.RetrievedDecember18,2014.
"JavaSecurityOverview".JavaDocumentation.Oracle.ArchivedfromtheoriginalonJanuary3,2015.RetrievedDecember18,2014.
"Trail:Internationalization".TheJavaTutorials.Oracle.ArchivedfromtheoriginalonDecember31,2014.RetrievedDecember18,2014.
"HowtoWriteDocCommentsfortheJavadocTool".OracleTechnologyNetwork.Oracle.ArchivedfromtheoriginalonDecember18,2014.RetrievedDecember18,2014.
Niccolai,James(January24,2001)."Sun,MicrosoftsettleJavalawsuit".JavaWorld.IDGNewsService.ArchivedfromtheoriginalonJuly14,2020.RetrievedJuly13,2020.
vanGurp,Jilles(November13,2007)."GoogleAndroid:InitialImpressionsandCriticism".Javalobby.ArchivedfromtheoriginalonAugust28,2008.RetrievedMarch7,2009."Frankly,Idon'tunderstandwhyGoogleintendstoignorethevastamountofexistingimplementationoutthere.Itseemslikeabadcaseof"notinventedhere"tome.Ultimately,thiswillslowadoption.TherearealreadytoomanyJavaplatformsforthemobileworldandthisisyetanotherone"
Mullin,Joe(May7,2012)."GoogleguiltyofinfringementinOracletrial;futurelegalheadachesloom".Law&Disorder.ArsTechnica.ArchivedfromtheoriginalonMay8,2012.RetrievedMay8,2012.
Mullin,Joe(May31,2012)."GooglewinscrucialAPIruling,Oracle'scasedecimated".ArsTechnica.ArchivedfromtheoriginalonMarch12,2017.RetrievedJune1,2012.
Rosenblatt,Seth(May9,2014)."CourtsideswithOracleoverAndroidinJavapatentappeal".CNET.ArchivedfromtheoriginalonMay10,2014.RetrievedMay10,2014.
Mullin,Joe(May26,2016)."GooglebeatsOracle—Androidmakes"fairuse"ofJavaAPIs".ArsTechnica.ArchivedfromtheoriginalonJanuary20,2017.RetrievedMay26,2016.
Farivar,Cyrus(March27,2018).""Google'suseoftheJavaAPIpackageswasnotfair,"appealscourtrules".ArsTechnica.ArchivedfromtheoriginalonSeptember24,2019.RetrievedAugust6,2019.
Lee,Timothy(April23,2019)."GoogleasksSupremeCourttooverruledisastrousrulingonAPIcopyrights".ArsTechnica.ArchivedfromtheoriginalonApril23,2019.RetrievedApril23,2019."GoogleLLCv.OracleAmerica,Inc593U.S.____(2021)"(PDF).Archived(PDF)fromtheoriginalonApril5,2021.RetrievedApril6,2021.BibliographyBloch,Joshua(2018)."EffectiveJava:ProgrammingLanguageGuide"(thirded.).Addison-Wesley.ISBN978-0134685991.
Gosling,James;Joy,Bill;Steele,Guy;Bracha,Gilad;Buckley,Alex(2014).TheJava®LanguageSpecification(PDF)(JavaSE8ed.).Archived(PDF)fromtheoriginalonOctober21,2014.RetrievedNovember18,2014.
Gosling,James;Joy,Bill;Steele,GuyL.Jr.;Bracha,Gilad(2005).TheJavaLanguageSpecification(3rded.).Addison-Wesley.ISBN0-321-24678-0.ArchivedfromtheoriginalonFebruary14,2012.RetrievedFebruary8,2019.
Lindholm,Tim;Yellin,Frank(1999).TheJavaVirtualMachineSpecification(2nded.).Addison-Wesley.ISBN0-201-43294-3.ArchivedfromtheoriginalonSeptember25,2011.RetrievedFebruary8,2019.Externallinks
WikiversityhaslearningresourcesaboutJavaPlatform,EnterpriseEdition/JavaEETutorialThedictionarydefinitionofJavaatWiktionary
MediarelatedtoJava(programminglanguage)atWikimediaCommons
JavaProgrammingatWikibooks
LearningmaterialsrelatedtoJavaatWikiversity
JavaWeeklyvteJava(softwareplatform)vteSunMicrosystems(acquiredbyOracle)vteOracleCorporationvteOraclefreeandopen-sourcesoftware(FOSS)vteProgramminglanguagesComparisonTimelineHistoryAdaALGOLAPLArkTSAssemblyBASICCC++C#ClassicVisualBasicCOBOLErlangForthFortranGoHaskellJavaJavaScriptJuliaKotlinLispLuaMATLABMLObjectPascalPascalPerlPHPPrologPythonRRubyRustSQLScratchShellSimulaSmalltalkSwiftVisualBasicmore...Lists:AlphabeticalCategoricalGenerationalNon-English-basedCategoryAuthoritycontroldatabases:NationalEditthisatWikidataSpainFranceBnFdataGermanyIsraelUnitedStatesCzechRepublicCategories:Java(programminglanguage)CprogramminglanguagefamilyClass-basedprogramminglanguagesConcurrentprogramminglanguagesJavaplatformJavaspecificationrequestsJVMprogramminglanguagesMulti-paradigmprogramminglanguagesObject-orientedprogramminglanguagesProgramminglanguagescreatedin1995ProgramminglanguagesStaticallytypedprogramminglanguagesSunMicrosystemsCompiledprogramminglanguagesThispagewaslasteditedon12June2024,at11:36(UTC).
TextisavailableundertheCreativeCommonsAttribution-ShareAlikeLicense4.0;additionaltermsmayapply.Byusingthissite,youagreetotheTermsofUseandPrivacyPolicy.Wikipedia®isaregisteredtrademarkoftheWikimediaFoundation,Inc.,anon-profitorganization.Privacypolicy
AboutWikipedia
Disclaimers
ContactWikipedia
CodeofConduct
Developers
Statistics
Cookiestatement
MobileviewWikimediaFoundation
PoweredbyMediaWiki